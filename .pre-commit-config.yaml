# Pre-commit hooks for GUARD
# Install: poetry run pre-commit install
# Run manually: poetry run pre-commit run --all-files
# Update hooks: poetry run pre-commit autoupdate

repos:
  # Ruff - Fast Python linter (replaces flake8, isort, and more)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.2.2
    hooks:
      # Run the linter
      - id: ruff
        name: ruff lint
        args: [--fix]
        types_or: [python, pyi]

      # Run the formatter
      - id: ruff-format
        name: ruff format
        types_or: [python, pyi]

  # MyPy - Static type checking
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        name: mypy type check
        additional_dependencies:
          - pydantic>=2.6.0
          - boto3-stubs[dynamodb,secretsmanager,sts,eks]
          - types-pyyaml
        args: [--config-file=pyproject.toml]
        exclude: ^tests/

  # Standard pre-commit hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      # Prevent commits to main branch
      - id: no-commit-to-branch
        name: prevent commits to main
        args: [--branch, main, --branch, master]

      # File checks
      - id: check-yaml
        name: check yaml syntax
        args: [--allow-multiple-documents]
      - id: check-json
        name: check json syntax
      - id: check-toml
        name: check toml syntax
      - id: check-added-large-files
        name: check for large files
        args: [--maxkb=1000]
      - id: check-merge-conflict
        name: check for merge conflicts
      - id: check-case-conflict
        name: check for case conflicts

      # Whitespace and formatting
      - id: trailing-whitespace
        name: trim trailing whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
        name: fix end of files
      - id: mixed-line-ending
        name: fix mixed line endings
        args: [--fix=lf]

      # Security
      - id: detect-private-key
        name: detect private keys

  # Check for secrets
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        name: detect secrets
        args: [--baseline, .secrets.baseline]
        exclude: |
          (?x)^(
            .*\.lock$|
            .*\.log$|
            htmlcov/.*|
            .pytest_cache/.*
          )$

# Configuration for pre-commit
default_language_version:
  python: python3.11

# Fail fast - stop on first failure
fail_fast: false

# Skip these paths
exclude: |
  (?x)^(
    htmlcov/.*|
    .pytest_cache/.*|
    .git/.*|
    .mypy_cache/.*|
    .ruff_cache/.*|
    __pycache__/.*|
    .*\.egg-info/.*|
    dist/.*|
    build/.*
  )$
