---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: guard
  namespace: guard-system
  labels:
    app.kubernetes.io/name: guard
    app.kubernetes.io/component: automation
    app.kubernetes.io/version: "0.1.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: guard
  template:
    metadata:
      labels:
        app.kubernetes.io/name: guard
        app.kubernetes.io/component: automation
    spec:
      serviceAccountName: guard
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: guard
        # Replace with your container registry and image tag
        image: <YOUR_REGISTRY>/guard:latest
        imagePullPolicy: Always
        # Keep pod running for manual execution
        command: ["/bin/sleep"]
        args: ["infinity"]
        env:
        - name: GUARD_CONFIG_PATH
          value: /app/config/config.yaml
        - name: AWS_REGION
          value: us-east-1
        - name: AWS_DEFAULT_REGION
          value: us-east-1
        # Uncomment if you need to use Pod Identity explicitly
        # - name: AWS_WEB_IDENTITY_TOKEN_FILE
        #   value: /var/run/secrets/eks.amazonaws.com/serviceaccount/token
        # - name: AWS_ROLE_ARN
        #   valueFrom:
        #     fieldRef:
        #       fieldPath: metadata.annotations['eks.amazonaws.com/role-arn']
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: config
        configMap:
          name: guard-config
          optional: true
      restartPolicy: Always
